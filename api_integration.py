# -*- coding: utf-8 -*-
"""Api integration.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wBxcdg7KBrZahsPl9Oa7-ch1ljzMNzgc
"""

import requests
import time

def get_city_air_quality(city, state, country, api_key, retry_count=0, max_retries=3):
    base_url = "http://api.airvisual.com/v2"
    endpoint = f"{base_url}/city"
    params = {
        "city": city,
        "state": state,
        "country": country,
        "key": api_key
    }

    try:
        response = requests.get(endpoint, params=params)

        if response.status_code == 200:
            return response.json()
        elif response.status_code == 429 and retry_count < max_retries:

            wait_time = 2 ** retry_count
            print(f"Rate limited. Waiting {wait_time} seconds before retry.")
            time.sleep(wait_time)
            return get_city_air_quality(city, state, country, api_key, retry_count + 1, max_retries)
        else:
            print(f"Error: {response.status_code}")
            print(response.text)
            return None
    except Exception as e:
        print(f"Request failed: {e}")
        return None

def display_air_quality(data):
    if not data:
        print("No data available.")
        return

    try:
        city = data["data"]["city"]
        state = data["data"]["state"]
        country = data["data"]["country"]
        aqi_us = data["data"]["current"]["pollution"]["aqius"]
        main_pollutant_us = data["data"]["current"]["pollution"]["mainus"]
        temperature = data["data"]["current"]["weather"]["tp"]
        humidity = data["data"]["current"]["weather"]["hu"]

        print("\n===== Air Quality Report =====")
        print(f"Location: {city}, {state}, {country}")
        print(f"AQI (US): {aqi_us}")
        print(f"Main Pollutant: {main_pollutant_us}")
        print(f"Temperature: {temperature}Â°C")
        print(f"Humidity: {humidity}%")


        if aqi_us <= 50:
            category = "Good"
        elif aqi_us <= 100:
            category = "Moderate"
        elif aqi_us <= 150:
            category = "Unhealthy for Sensitive Groups"
        elif aqi_us <= 200:
            category = "Unhealthy"
        elif aqi_us <= 300:
            category = "Very Unhealthy"
        else:
            category = "Hazardous"
            health_implications = "Health alert: everyone may experience more serious health effects."

        print(f"Category: {category}")

        print("=============================")

    except KeyError as e:
        print(f"Error parsing data: {e}")
        print("Raw data:", data)

def main():

    api_key = "53e387bd-ba3e-45cf-8d6b-43f159651127"

    print("Air Quality Index Checker")
    print("------------------------")


    city = input("Enter city name: ")
    state = input("Enter state/province: ")
    country = input("Enter country: ")

    print(f"\nFetching air quality data for {city}, {state}, {country}...")


    data = get_city_air_quality(city, state, country, api_key)
    display_air_quality(data)

if __name__ == "__main__":
    main()